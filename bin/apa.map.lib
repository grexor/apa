#!/usr/bin/python

import apa
import sys
import glob
from Queue import *
from threading import *
import os

import argparse
parser = argparse.ArgumentParser()
parser.add_argument('-lib_id', action="store", dest="lib_id")
parser.add_argument('-mapper', action="store", dest="mapper", default="star")
parser.add_argument('-cpu', action="store", dest="cpu", default=1)
args = parser.parse_args()

num_worker_threads = 20
q = Queue()

def worker():
    while True:
        task = q.get()
        os.system(task)
        q.task_done()

# STEP1: process all study data
tasks = []
for exp_id in apa.annotation.libs[lib_id].experiments.keys():
    tasks.append("apa.map -lib_id %s -exp_id %s -force -mapper %s -cpu %s" % (lib_id, exp_id, mapper, cpu))

for i in range(num_worker_threads):
     t = Thread(target=worker)
     t.daemon = True
     t.start()

for task in tasks:
    q.put(task)

q.join()

# conclude with mapping stats
apa.map.stats(lib_id)
