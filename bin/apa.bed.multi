#!/usr/bin/python

import apa
import sys
import glob
from Queue import *
from threading import *
import os

import argparse
parser = argparse.ArgumentParser()
parser.add_argument('-type', action="store", dest="type", default="raw") # raw or expression
parser.add_argument('-lib', action="store", dest="lib", default=None)
args = parser.parse_args()

num_worker_threads = 40
q = Queue()

def worker():
    while True:
        task = q.get()
        os.system(task)
        q.task_done()

# get experiments
eids = apa.annotation.libs[args.lib].experiments.keys()

# raw
tasks = []
for eid in eids:
    tasks.append("apa.bed -type %s -lib_id %s -exp_id %s -force" % (args.type, args.lib, eid))

for i in range(num_worker_threads):
     t = Thread(target=worker)
     t.daemon = True
     t.start()

for task in tasks:
    q.put(task)

q.join()
