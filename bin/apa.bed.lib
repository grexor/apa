#!/usr/bin/python

import apa
import sys
import glob
from Queue import *
from threading import *
import os

import argparse
parser = argparse.ArgumentParser()
parser.add_argument('-lib_id', action="store", dest="lib_id")
parser.add_argument('-genome', action="store", dest="genome", default=None)
args = parser.parse_args()

num_worker_threads = 40
q = Queue()

lib_id = sys.argv[1]

def worker():
    while True:
        task = q.get()
        os.system(task)
        q.task_done()

# STEP1: process all study data
tasks = []
for exp_id, exp_data in apa.annotation.libs[args.lib_id].experiments.items():
    if args.genome!=None:
        if exp_data["map_to"]!=args.genome:
            continue
    tasks.append("apa.bed.process -lib_id %s -exp_id %s -force" % (args.lib_id, exp_id))
    print "apa.bed.process -lib_id %s -exp_id %s -force" % (args.lib_id, exp_id)

for i in range(num_worker_threads):
     t = Thread(target=worker)
     t.daemon = True
     t.start()
     
for task in tasks:
    q.put(task)
    
q.join()

